/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package backtype.storm.generated;

import java.util.ArrayList;
import java.util.List;

public class StreamInfo implements java.io.Serializable, Cloneable {
  private List<String> outputFields; // required
  private boolean direct; // required

  public List<String> getOutputFields() {
    return outputFields;
  }

  public void setOutputFields(List<String> outputFields) {
    this.outputFields = outputFields;
  }

  public boolean isDirect() {
    return direct;
  }

  public void setDirect(boolean direct) {
    this.direct = direct;
  }

  public StreamInfo(List<String> fields, boolean direct) {
    this.outputFields = fields;
    this.direct = direct;
  }

  public StreamInfo(StreamInfo other) {
    if (other.getOutputFields() != null) {
      List<String> __this__output_fields = new ArrayList<String>();
      for (String other_element : other.getOutputFields()) {
        __this__output_fields.add(other_element);
      }
      this.outputFields = __this__output_fields;
    }
    this.direct = other.direct;
  }

}

